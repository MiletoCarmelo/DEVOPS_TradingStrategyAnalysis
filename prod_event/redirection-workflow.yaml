apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: trading-strategy-analysis-template
  namespace: argo-events
spec:
  entrypoint: create-and-redirect
  arguments:
    parameters:
      - name: pod-name
  templates:
    - name: create-and-redirect
      steps:
        - - name: create-pod
            template: create-pod
        - - name: wait-for-pod
            template: wait-for-pod
        - - name: tail-logs
            template: tail-logs
        - - name: redirect
            template: redirect

    - name: create-pod
      resource:
        action: create
        setOwnerReference: true
        manifest: |
          apiVersion: v1
          kind: Pod
          metadata:
            name: "{{workflow.parameters.pod-name}}"
            labels:
              app: trading-strategy-analysis
          spec:
            containers:
            - name: trading-strategy-analysis
              image: ghcr.io/miletocarmelo/tradingstrategyanalysis:latest
              ports:
              - containerPort: 8080

    - name: wait-for-pod
      resource:
        action: get
        successCondition: status.phase == Running
        failureCondition: status.phase in (Failed, Unknown)
        manifest: |
          apiVersion: v1
          kind: Pod
          metadata:
            name: "{{workflow.parameters.pod-name}}"
            namespace: {{workflow.namespace}}

    - name: tail-logs
      container:
        image: bitnami/kubectl
        command: [sh, -c]
        args: ["kubectl logs -f {{workflow.parameters.pod-name}} -n {{workflow.namespace}}"]

    - name: redirect
      http:
        url: "http://{{workflow.parameters.pod-name}}:8080"